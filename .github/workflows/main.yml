name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:    


jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: ./package-lock.json
    - name: Install dependencies
      run: npm install
    - name: Lint Code
      run: npm run lint

  unit_test:
   needs: ['setup']
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v3
   - name: Install Dependencies
     run: npm install
   - name: Run unit tests
     run: npm run test:ci
   - name: Generage Coverage
     uses: codecov/codecov-action@v3.1.4
     with:
      token: ${{secrets.USER_TOKEN}}
      file: ./coverage
    # Comma-separated list of files to upload
    # Directory to search for coverage reports.
      directory: ./coverage
    # Specify the path of a full Codecov report to re-upload
    #full_report: # optional
    # The commit SHA of the parent for which you are uploading coverage. If not present, the parent will be determined using the API of your repository provider.  When using the repository providers API, the parent is determined via finding the closest ancestor to the commit.
   # commit_parent: # optional
  #  # Don't upload files to Codecov
   # dry_run: # optional
    # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
    #env_vars: # optional
    # Specify whether or not CI build should fail if Codecov runs into an error during upload
    #fail_ci_if_error: # optional
    # Comma-separated list, see the README for options and their usage. Options include `network`, `fixes`, `search`.
   # functionalities: # optional
    # Run with gcov support
    #gcov: # optional

  teste2e:
   needs: ['unit_test']
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v3
   - name: Use Node.js ${{ matrix.node-version }}
     uses: actions/setup-node@v3
     with:
      node-version: 18
      cache: 'npm'
      cache-dependency-path: ./package-lock.json
   - name: Install dependencies
     run: npm install
   - name: Cypress.io
     uses: cypress-io/github-action@v5.8.2
     with:
      build: npm run build
      start: npm run dev
      browser: chrome



  build:
   needs: ['teste2e']
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v3
   - name: install dependencies
     run: npm install
   - name: build
     run: npm run build





